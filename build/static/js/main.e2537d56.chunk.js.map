{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","BASE_URL","Row","_ref","title","fetchUrl","_ref$isLarge","isLarge","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","useEffect","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","request","dataResults","wrap","_context","prev","next","get","sent","data","results","filter","result","backdrop_path","stop","apply","this","arguments","fetchData","react_default","createElement","className","map","movie","concat","key","id","src","poster_path","alt","name","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","min","max","length","Math","floor","random","abrupt","style","backgroundImage","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","src_Nav","src_Banner","src_Row","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"8UAOeA,EALAC,IAAMC,OAAO,CACxBC,QAAQ,iCCINC,qBAAS,wCA4BAC,MA3Bf,SAAAC,GAA8C,IAAhCC,EAAgCD,EAAhCC,MAAMC,EAA0BF,EAA1BE,SAA0BC,EAAAH,EAAjBI,eAAiB,IAAAD,KAC1CE,EAAyBC,mBAAS,IAAlCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAcI,EAAdJ,EAAA,GAaA,OAZAK,oBAAW,WAAI,SAAAC,IAAA,OAAAA,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KACX,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyB7B,EAAM8B,IAAIvB,GADnC,OACUiB,EADVG,EAAAI,KAEUN,EAAYD,EAAQQ,KAAKC,QAAQC,OAAO,SAAAC,GAC1C,OAA6B,MAAtBA,EAAOC,gBAElBpB,EAAUS,GALd,wBAAAE,EAAAU,SAAAd,OADWe,MAAAC,KAAAC,YAAA,WAAAtB,EAAAoB,MAAAC,KAAAC,WAQXC,IACF,CAAClC,IAICmC,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,OACXF,EAAArB,EAAAsB,cAAA,UAAKrC,GACLoC,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,cAEV7B,EAAO8B,IAAI,SAAAC,GAAK,OACbJ,EAAArB,EAAAsB,cAAA,OAAKC,UAAS,UAAAG,OAAYtC,GAAW,gBAAkBuC,IAAKF,EAAMG,GAAIC,IAAG,GAAAH,OAAK5C,GAAL4C,OAAgBtC,EAASqC,EAAMK,YAAcL,EAAMV,eAAiBgB,IAAKN,EAAMO,YC5BtKC,EAAQ,mCAWCC,EAVC,CACZC,cAAa,8BAAAT,OAAgCO,EAAhC,mBACbG,sBAAqB,wBAAAV,OAA0BO,EAA1B,sBACrBI,cAAa,4BAAAX,OAA8BO,EAA9B,mBACbK,kBAAiB,2BAAAZ,OAA6BO,EAA7B,mBACjBM,kBAAiB,2BAAAb,OAA6BO,EAA7B,mBACjBO,kBAAiB,2BAAAd,OAA6BO,EAA7B,mBACjBQ,mBAAkB,2BAAAf,OAA6BO,EAA7B,sBAClBS,mBAAkB,2BAAAhB,OAA6BO,EAA7B,0BCoCPU,MAxCf,WACI,IAAAtD,EAAuBC,mBAAS,IAAhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOoC,EAAPlC,EAAA,GAAaqD,EAAbrD,EAAA,GAYA,OAXAK,oBAAW,WAAM,SAAAC,IAAA,OAAAA,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KACb,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyB7B,IAAM8B,IAAN,+BAAAiB,OAAyCQ,EAASE,wBAD3E,cACUjC,EADVG,EAAAI,KAEIkC,EACIzC,EAAQQ,KAAKC,SA8BRiC,EA9B6B,EA8BxBC,EA9B0B3C,EAAQQ,KAAKC,QAAQmC,OA+B9DC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,IAASA,KAlC9CvC,EAAA6C,OAAA,SAKWhD,GALX,wBAAAG,EAAAU,OAiCR,IAAqB6B,EAAKC,GAjClB5C,OADae,MAAAC,KAAAC,YAAA,WAAAtB,EAAAoB,MAAAC,KAAAC,WAQbC,IACF,IAGEC,EAAArB,EAAAsB,cAAA,UAAQC,UAAU,SACd6B,MACI,CACIC,gBAAe,uGAAA3B,OAAA,OAAwGD,QAAxG,IAAwGA,OAAxG,EAAwGA,EAAOV,cAA/G,UAKvBM,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,kBACXF,EAAArB,EAAAsB,cAAA,WAAU,OAALG,QAAK,IAALA,OAAA,EAAAA,EAAOO,QAAP,OAAeP,QAAf,IAAeA,OAAf,EAAeA,EAAO6B,iBAAtB,OAAuC7B,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAOxC,QAEnDoC,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,eACZF,EAAArB,EAAAsB,cAAA,UAAQC,UAAU,cAAlB,QACAF,EAAArB,EAAAsB,cAAA,UAAQC,UAAU,cAAlB,YAEHF,EAAArB,EAAAsB,cAAA,MAAIC,UAAU,sBAAd,OAAoCE,QAApC,IAAoCA,OAApC,EAAoCA,EAAO8B,mBCP5CC,MAxBf,WACI,IAAAnE,EAAwBC,mBAAS,IAAjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOoE,EAAPlE,EAAA,GAAYmE,EAAZnE,EAAA,GAYA,OAXAK,oBAAU,WAON,OANA+D,OAAOC,iBAAiB,SAAS,WAC1BD,OAAOE,QAAQ,IACdH,GAAW,GAEVA,GAAW,KAEb,WACHC,OAAOG,oBAAoB,YAEjC,IAEEzC,EAAArB,EAAAsB,cAAA,OAAKC,UAAS,OAAAG,OAAS+B,GAAQ,cAC3BpC,EAAArB,EAAAsB,cAAA,OACAC,UAAU,OACVM,IAAI,4EACJE,IAAI,WCKDgC,MAlBf,WACE,OACE1C,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,OACbF,EAAArB,EAAAsB,cAAC0C,EAAD,MACA3C,EAAArB,EAAAsB,cAAC2C,EAAD,MAEA5C,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,oBAAoBC,SAAUgD,EAASE,sBAAuBhD,SAAO,IAChFiC,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,eAAeC,SAAUgD,EAASC,gBAC7Cd,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,YAAYC,SAAUgD,EAASG,gBAC1ChB,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,gBAAgBC,SAAUgD,EAASI,oBAC9CjB,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,gBAAgBC,SAAUgD,EAASK,oBAC9ClB,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,gBAAgBC,SAAUgD,EAASM,oBAC9CnB,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,iBAAiBC,SAAUgD,EAASO,qBAC/CpB,EAAArB,EAAAsB,cAAC4C,EAAD,CAAKjF,MAAM,gBAAgBC,SAAUgD,EAASQ,uBCTrCyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAxF,GAAiD,IAA9C0F,EAA8C1F,EAA9C0F,OAAQC,EAAsC3F,EAAtC2F,OAAQC,EAA8B5F,EAA9B4F,OAAQC,EAAsB7F,EAAtB6F,OAAQC,EAAc9F,EAAd8F,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP3D,EAAArB,EAAAsB,cAACD,EAAArB,EAAMiF,WAAP,KACE5D,EAAArB,EAAAsB,cAAC4D,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.e2537d56.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance=axios.create({\r\n    baseURL:'https://api.themoviedb.org/3',\r\n}\r\n)\r\n\r\nexport default instance;","import React , { useState,useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst BASE_URL='https://image.tmdb.org/t/p/original/';\r\nfunction Row({title,fetchUrl,isLarge=false }) {\r\n    const [movies,setMovies]=useState([]);\r\n    useEffect( ()=>{\r\n        async function fetchData(){\r\n            const request= await axios.get(fetchUrl)\r\n            const dataResults=request.data.results.filter(result=>{\r\n                return result.backdrop_path!=null\r\n            })\r\n            setMovies(dataResults)\r\n        }\r\n        fetchData();\r\n    },[fetchUrl] )\r\n\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n            <div className='row-poster' >\r\n                \r\n                {movies.map(movie=>(\r\n                    <img className={`poster ${isLarge && 'large-poster'}`} key={movie.id} src={`${BASE_URL}${isLarge? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","const API_KEY='fd954bb4278068ac97190b732c9a6980';\r\nconst requests ={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport requests from './requests';\r\nimport './banner.css';\r\n\r\nfunction Banner() {\r\n    const [movie,setMovie]=useState([])\r\n    useEffect( () => {\r\n        async function fetchData(){\r\n            const request= await axios.get(`https://api.themoviedb.org/3${requests.fetchNetflixOriginals}`)\r\n            setMovie(\r\n                request.data.results[ randomValue(0,request.data.results.length) ]\r\n            )\r\n            return request\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    return (\r\n        <header className='banner'\r\n            style={\r\n                {\r\n                    backgroundImage:` linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url( 'https://image.tmdb.org/t/p/original/${movie?.backdrop_path}' ) `,\r\n\r\n                }\r\n            }\r\n        >\r\n            <div className='banner-content'>\r\n                <h1>{movie?.name || movie?.original_name || movie?.title}</h1>\r\n\r\n                <div className='banner-btns'>\r\n                   <button className='banner-btn'>Play</button>\r\n                   <button className='banner-btn'>My List</button>\r\n                </div>\r\n                <h1 className='banner_description'>{movie?.overview}</h1>\r\n            </div>\r\n        </header>\r\n        \r\n    );\r\n}\r\n\r\nfunction randomValue(min, max) {\r\n    return Math.floor(Math.random() * (max - min) ) + min;\r\n}\r\n\r\nexport default Banner;","import React, { useEffect, useState } from 'react';\r\nimport './nav.css'\r\n\r\nfunction Nav() {\r\n    const [show,handleShow]=useState([])\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll',()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            }\r\n            else handleShow(false);\r\n        })\r\n        return ()=>{\r\n            window.removeEventListener('scroll')\r\n        }\r\n    },[])\r\n    return (\r\n        <div className={`nav ${show && 'nav-black'}`}>\r\n            <img \r\n            className='logo' \r\n            src='https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg'\r\n            alt='logo'\r\n            /> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import './App.css';\nimport React from 'react';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n\n      <Row title='NETFLIX ORIGINALS' fetchUrl={requests.fetchNetflixOriginals} isLarge />\n      <Row title='Trending Now' fetchUrl={requests.fetchTrending}/>\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated}/>\n      <Row title='Action Movies' fetchUrl={requests.fetchActionMovies}/>\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies}/>\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title='Romance Movies' fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}